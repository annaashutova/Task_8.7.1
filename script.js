let minValue = parseInt(prompt('–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ —á–∏—Å–ª–∞ –¥–ª—è –∏–≥—Ä—ã','0'));
let maxValue = parseInt(prompt('–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ —á–∏—Å–ª–∞ –¥–ª—è –∏–≥—Ä—ã','100'));
if (Number.isNaN(minValue)) {
    minValue = 0;
}

if (Number.isNaN(maxValue)) {
    maxValue = 100;
}
if (minValue < 0 || minValue > 1000){
    minValue = 0
}
if (maxValue > 1000 || maxValue < 0){
      maxValue = 999
}

alert(`–ó–∞–≥–∞–¥–∞–π—Ç–µ –ª—é–±–æ–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –æ—Ç ${minValue} –¥–æ ${maxValue}, –∞ —è –µ–≥–æ —É–≥–∞–¥–∞—é`);

let answerNumber  = Math.floor((minValue + maxValue) / 2);
let orderNumber = 1;
let gameRun = true; 

const orderNumberField = document.getElementById('orderNumberField');
const answerField = document.getElementById('answerField');

function NumberToString(number) {
    let digit = {
      0: "–Ω–æ–ª—å",
      1: "–æ–¥–∏–Ω",
      2: "–¥–≤–∞",
      3: "—Ç—Ä–∏",
      4: "—á–µ—Ç—ã—Ä–µ",
      5: "–ø—è—Ç—å",
      6: "—à–µ—Å—Ç—å",
      7: "—Å–µ–º—å",
      8: "–≤–æ—Å–µ–º—å",
      9: "–¥–µ–≤—è—Ç—å",
      10: "–¥–µ—Å—è—Ç—å",
      11: "–æ–¥–∏–Ω–Ω–∞–¥—Ü–∞—Ç—å",
      12: "–¥–≤–µ–Ω–∞–¥—Ü–∞—Ç—å",
      13: "—Ç—Ä–∏–Ω–∞–¥—Ü–∞—Ç—å",
      14: "—á–µ—Ç—ã—Ä–Ω–∞–¥—Ü–∞—Ç—å",
      15: "–ø—è—Ç–Ω–∞–¥—Ü–∞—Ç—å",
      16: "—à–µ—Å—Ç–Ω–∞–¥—Ü–∞—Ç—å",
      17: "—Å–µ–º–Ω–∞–¥—Ü–∞—Ç—å",
      18: "–≤–æ—Å–µ–º–Ω–∞–¥—Ü–∞—Ç—å",
      19: "–¥–µ–≤—è—Ç–Ω–∞–¥—Ü–∞—Ç—å",
      20: "–¥–≤–∞–¥—Ü–∞—Ç—å",
      30: "—Ç—Ä–∏–¥—Ü–∞—Ç—å",
      40: "—Å–æ—Ä–æ–∫",
      50: "–ø—è—Ç—å–¥–µ—Å—è—Ç",
      60: "—à–µ—Å—Ç—å–¥–µ—Å—è—Ç",
      70: "—Å–µ–º—å–¥–µ—Å—è—Ç",
      80: "–≤–æ—Å–µ–º—å–¥–µ—Å—è—Ç",
      90: "–¥–µ–≤—è–Ω–æ—Å—Ç–æ",
      100: "—Å—Ç–æ",
      200: "–¥–≤–µ—Å—Ç–∏",
      300: "—Ç—Ä–∏—Å—Ç–∞",
      400: "—á–µ—Ç—ã—Ä–µ—Å—Ç–∞",
      500: "–ø—è—Ç—å—Å–æ—Ç",
      600: "—à–µ—Å—Ç—å—Å–æ—Ç",
      700: "—Å–µ–º—å—Å–æ—Ç",
      800: "–≤–æ—Å–µ–º—å—Å–æ—Ç",
      900: "–¥–µ–≤—è—Ç—å—Å–æ—Ç",
    }
  
    let result = "";
  
    if(!digit[number]) {
      if (Math.abs(number / 100) < 1) {
        result = digit[number - number % 10] + " " + digit[number % 10];
      }
      else if (Math.abs(number / 100) > 1 && Math.abs(number / 100) < 10 ) {
        return digit[number - number % 100] +  " " + NumberToString(number % 100);
      }
    }
    else {
      result = digit[number]
    }
  
    return result;
  }

orderNumberField.innerText = orderNumber;
answerField.innerText = `–í—ã –∑–∞–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ ${NumberToString(answerNumber) }?`; 

document.getElementById('btnRetry').addEventListener('click', function () {
    if (gameRun == false){ 
        minValue = parseInt(prompt('–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ —á–∏—Å–ª–∞ –¥–ª—è –∏–≥—Ä—ã','0'));;
        maxValue = parseInt(prompt('–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ —á–∏—Å–ª–∞ –¥–ª—è –∏–≥—Ä—ã','100'));
        if (Number.isNaN(minValue)) {
            minValue = 0;
        }
        
        if (Number.isNaN(maxValue)) {
            maxValue = 100;
        }
        if (minValue < 0 || minValue > 1000){
            minValue = 0
        }
        if (maxValue > 1000 || maxValue < 0){
              maxValue = 999
        }
        alert(`–ó–∞–≥–∞–¥–∞–π—Ç–µ –ª—é–±–æ–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –æ—Ç ${minValue} –¥–æ ${maxValue}, –∞ —è –µ–≥–æ —É–≥–∞–¥–∞—é`);
        orderNumber = 1;
        answerNumber  = Math.floor((minValue + maxValue) / 2);
        answerField.innerText = `–í—ã –∑–∞–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ ${NumberToString(answerNumber) }?`;
        gameRun = true;
    }else{
        minValue = parseInt(prompt('–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ —á–∏—Å–ª–∞ –¥–ª—è –∏–≥—Ä—ã','0'));;
        maxValue = parseInt(prompt('–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ —á–∏—Å–ª–∞ –¥–ª—è –∏–≥—Ä—ã','100'));
        if (Number.isNaN(minValue)) {
            minValue = 0;
        }
        
        if (Number.isNaN(maxValue)) {
            maxValue = 100;
        }
        
        alert(`–ó–∞–≥–∞–¥–∞–π—Ç–µ –ª—é–±–æ–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –æ—Ç ${minValue} –¥–æ ${maxValue}, –∞ —è –µ–≥–æ —É–≥–∞–¥–∞—é`);
        orderNumber = 1;
        answerNumber  = Math.floor((minValue + maxValue) / 2);
        answerField.innerText = `–í—ã –∑–∞–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ ${NumberToString(answerNumber) }?`;
        gameRun = true;
    }
})

document.getElementById('btnOver').addEventListener('click', function () {
    if (gameRun){
        if (minValue === maxValue){
            const phraseRandom = Math.round( Math.random() * 1);
            const answerPhrase = (phraseRandom === 1) ?
                `–û—à–∏–±–æ—á–∫–∞ –≤—ã—à–ª–∞\n\u{1F62C}` :
                `–ß–∏—Å–ª–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å.. \n\u{1F64E}`;
            answerField.innerText = answerPhrase;
            gameRun = false;
        } else {
            minValue = answerNumber  + 1;
            answerNumber  = Math.floor((minValue + maxValue) / 2);
            orderNumber++;
            orderNumberField.innerText = orderNumber;
            const phraseRandom3 = Math.round( Math.random() * 3);
            switch(phraseRandom3) {
                case 1:
                   answerField.innerText = `–í–∞—à–µ —á–∏—Å–ª–æ ${NumberToString(answerNumber) }?`;
                    break;
                case 2:
                   answerField.innerText = `–ï—Å–ª–∏ —ç—Ç–æ –Ω–µ ${NumberToString(answerNumber) }, –∏–¥–µ–º –¥–∞–ª—å—à–µ!\n\u{1F600}`;
                    break;
                case 3:
                    answerField.innerText = `${NumberToString(answerNumber) } ?`;
                    break;
            }
           
        }
    }
})

document.getElementById('btnLess').addEventListener('click', function () {
    if (gameRun){
        if (minValue === maxValue){
            const phraseRandom1 = Math.round( Math.random() * 3);
            switch(phraseRandom1) {
                 case 1:
                     answerField.innerText = `–£–≤—ã, –Ω–æ —á–∏—Å–µ–ª –±–æ–ª—å—à–µ –Ω–µ—Ç.. \n\u{1F645}`;
                     break;
                 case 2:
                     answerField.innerText = `–í—ã –≥–¥–µ —Ç–æ –æ—à–∏–±–ª–∏—Å—å \n\u{1F62C}`;
                     break;
                 case 3:
                     answerField.innerText = `–û—à–∏–±–æ—á–∫–∞ –≤—ã—à–ª–∞!`;
                     break;
             }
            gameRun = false;
        } else {
            maxValue = answerNumber;
            answerNumber  = Math.floor((minValue + maxValue) / 2);
            orderNumber++;
            orderNumberField.innerText = orderNumber;            
            const phraseRandom3 = Math.round( Math.random() * 3);
            switch(phraseRandom3) {
                 case 1:
                    answerField.innerText = `–í–∞—à–µ —á–∏—Å–ª–æ ${NumberToString(answerNumber) }?`;
                     break;
                 case 2:
                    answerField.innerText = `–ï—Å–ª–∏ —ç—Ç–æ –Ω–µ ${NumberToString(answerNumber) }, –∏–¥–µ–º –¥–∞–ª—å—à–µ!\n\u{1F600}`;
                     break;
                 case 3:
                     answerField.innerText = `${NumberToString(answerNumber) } ?`;
                     break;
             }
        }
    }
})

document.getElementById('btnEqual').addEventListener('click', function () {
    if (gameRun){
        const phraseRandom2 = Math.round( Math.random() * 4);        
         switch(phraseRandom2) {
            case 1:
                answerField.innerText = `–î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑ \n\u{1F64B}`;
            break;
            case 2:
                answerField.innerText = `–î–∞–π –ø—è—Ç—å\n\u{1F64C}`;
            break;
            case 3:
                answerField.innerText = `–£—Ä–∞! üéâ`;
            break;
            case 4:
                answerField.innerText = `–≠—Ç–æ –±—ã–ª–æ –ª–µ–≥–∫–æ!`;
            break;
            }
        gameRun = false;
    }
})
